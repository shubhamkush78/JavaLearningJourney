show databases;

create database schooldb;

show databases;

use schooldb

show tables;

create table students
(
    student_id int auto_increment primary key,
    student_name char(45) not null,
    email char(255)  not null unique,
    password char(18) not null 
);

show tables;

desc students;

select * from students;

insert into students (student_name, email, password) value ('Mohan Kumar', 'moh@gmail.com', '123456');

select * from students; 

insert into students (student_name, email, password) 
values 
('Ganesh Kumar', 'ganu@gmail.com', '127896'),
('Mohit Kumar', 'mohi@gmail.com', '127896'),
('Suresh Kumar', 'sur@gmail.com', '34896'),
('Vinay Kumar', 'vin@gmail.com', '156896');

select * from students;

update students set password='111111' where student_id=8;

select * from students;

update students set email='mohit@gmail.com',password='222222' where student_id=7;

select * from students;

delete from students where student_id=1;

select * from students;

delete from students where student_id in (6,9,7);

select * from students;

create table cities
(
    city_id int auto_increment primary key,
    city_name char(45) not null unique
);

show tables;

desc cities;

select * from cities;

insert into cities (city_name) values ('Jabalpur'),('Bhopal'),('Indore'),('Gwalior'),('Satna'),('Rewa'),('Panna'); 

select * from cities;

select * from cities order by city_id;

alter table students add column city_id int,
add constraint fk_students_cities foreign key (city_id) references cities (city_id);

desc students;

select * from students;

update students set city_id=3 where student_id=1;
update students set city_id=4 where student_id=2;
update students set city_id=7 where student_id=9;
update students set city_id=1 where student_id=4;
update students set city_id=5 where student_id=5;
update students set city_id=2 where student_id=6;
update students set city_id=3 where student_id=7;
update students set city_id=1 where student_id=8;

select * from students;

select * from students inner join cities where students.city_id=cities.city_id order by student_id;

create table student_subjects 
(
    student_subject_id int auto_increment primary key,
    student_id int not null,
    subject char(35) not null,
    constraint fk_stdsubjects_students foreign key (student_id) references students (student_id)
);

show tables;

desc student_subjects;

select * from student_subjects;

insert into student_subjects (student_id,subject) 
values
(1,'Sanskrit'),(1,'Hindi'),(1,'English'),(2,'Maths'),(2,'Science');

select * from student_subjects;

delete from students where student_id=1;

delete from student_subjects;

show tables;

drop table student_subjects;

show tables;

create table student_subjects 
(
    student_subject_id int auto_increment primary key,
    student_id int not null,
    subject char(35) not null,
    constraint fk_stdsubjects_students foreign key (student_id) references students (student_id) on delete cascade
);

show tables;

desc student_subjects;

insert into student_subjects (student_id,subject) 
values
(1,'Sanskrit'),(1,'Hindi'),(1,'English'),(2,'Maths'),(2,'Science');

select * from student_subjects;

delete from students where student_id=1;

select * from students;
select * from student_subjects;

delete from students where student_id=2;

select * from students;
select * from student_subjects;